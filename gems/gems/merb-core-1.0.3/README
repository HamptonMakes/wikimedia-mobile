merb-core 

A new branch of Merb (sometimes referred to as merb-next) which aims to provide 
a stable, stripped down API for the Merb 1.0 release.

This branch was based off the 0.5 release series with *significant* rewrites.

Goals of this release:

  * Stabilize the @public interface methods to provide for a more consistent application development experience.
  * Remove features until nothing except a central application API is left
  * Improve comments on methods using a standard documentation methodology as described in DOCUMENTATION_STANDARDS
  * Separate the tests into two sections... "private" and "public"
    * Public methods are methods tagged with @public that will be part of the standard, stable Merb API
    * Private methods are implementation methods that might 
  * Implement a new render API
  * Build more extensions to regain selected features when needed
  
To familiarize yourself with how a merb-core application might look, 
use merb-gen (from merb-more) to generate a few apps:

$ merb-gen app myapp         # merb stack app, assuming you are using DM and RSpec

The only option you can use with stack is --template_engine=(erb|haml).
Default is erb.

$ merb-gen core myapp        # a "regular" app without any predefined dependencies

Options available:

--orm=datamapper
--orm=sequel
--orm=activerecord

Default is no ORM.

--testing_framework=rspec
--testing_framework=test_unit

Default is rspec.

--template_enging=erb
--template_enging=haml

Default is erb.

$ merb-gen flat myapp        # a flattened app: one file and directory for views

Options are same as for "regular" app.

$ merb-gen very_flat myapp   # a single-file app

Options are same as for "regular" app.